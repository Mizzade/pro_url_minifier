# Stage 1: Builder
FROM oven/bun:slim AS builder

WORKDIR /app
ENV NODE_ENV=production

# Copy project files
COPY . .
RUN bun install --frozen-lockfile --production

# # Install OpenSSL (required by Prisma)
# # --no-install-recommends is used to reduce the size of the image. It prevents
# # the installation of recommended but optional packages.
# # In addition, delete all cached package list files that were downloaded
# # during apt-get update
# # This is needed because prisma requires OpenSSL for certain operations.
# RUN apt-get update -y \
#   && apt-get install -y --no-install-recommends openssl \
#   && rm -rf /var/lib/apt/lists/*

# # Generate Prisma Client at build time
# # The binary target depends on the base image architecture.
# RUN PRISMA_CLI_BINARY_TARGETS="linux-arm64-openssl-3.0.x" bunx prisma generate

# Create minimized production build
RUN bun build src/server.ts --target=bun --outdir=dist --minify

# Make entrypoint script executable
RUN chmod +x ./entrypoint.prod.sh

# Stage 2: Final (cleaner, runtime-only)
FROM oven/bun:slim

WORKDIR /app
ENV NODE_ENV=production
ENV PORT=5000

# Install OpenSSL (required by Prisma)
# --no-install-recommends is used to reduce the size of the image. It prevents
# the installation of recommended but optional packages.
# In addition, delete all cached package list files that were downloaded
# during apt-get update
RUN apt-get update -y \
  && apt-get install -y --no-install-recommends openssl \
  && rm -rf /var/lib/apt/lists/*

# Copy only necessary files
COPY --from=builder /app/dist /app
COPY --from=builder /app/prisma /app/prisma
COPY --from=builder /app/entrypoint.prod.sh /app/entrypoint.prod.sh

# Create non-root user
# -r creates a system account (no home dir, non-login)
# Then: Switch to the non-root user
RUN groupadd -r appuser && useradd -r -g appuser appuser && chown -R appuser:appuser /app
USER appuser

EXPOSE 5000

ENTRYPOINT ["./entrypoint.prod.sh"]
